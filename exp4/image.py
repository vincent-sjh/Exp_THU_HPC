import matplotlib.pyplot as plt

# 数据提取（这里直接使用你提供的数据，整理成列表）
data = [
    [0,32,1,9.28377], [1,32,1,10.1254], [0,32,2,7.61406], [1,32,2,6.54267], [0,32,3,7.62608], [1,32,3,5.8259],
    [0,32,4,7.64209], [1,32,4,5.53443], [0,32,5,7.69921], [1,32,5,5.80604], [0,32,6,7.70571], [1,32,6,5.72917],
    [0,32,7,7.68761], [1,32,7,5.59259], [0,32,8,7.70204], [1,32,8,5.49202], [0,32,9,7.72189], [1,32,9,5.54229],
    [0,32,10,7.75618], [1,32,10,5.63517], [0,32,11,7.85143], [1,32,11,5.9849], [0,32,12,7.7698], [1,32,12,5.64662],
    [0,32,13,8.01351], [1,32,13,6.22492], [0,32,14,7.85587], [1,32,14,5.8881], [0,32,15,7.83674], [1,32,15,5.68987],
    [0,32,16,7.7889], [1,32,16,5.49966], [0,32,17,8.19751], [1,32,17,6.35025], [0,32,18,8.0337], [1,32,18,6.03182],
    [0,32,19,8.02538], [1,32,19,5.9525], [0,32,20,7.93016], [1,32,20,5.76907], [0,32,21,7.92973], [1,32,21,5.71595],
    [0,32,22,8.40844], [1,32,22,7.07052], [0,32,23,8.37381], [1,32,23,6.81369], [0,32,24,8.31486], [1,32,24,6.8156],
    [0,32,25,8.32092], [1,32,25,6.56335], [0,32,26,8.22757], [1,32,26,6.48848], [0,32,27,7.99071], [1,32,27,6.22944],
    [0,32,28,7.99365], [1,32,28,6.28822], [0,32,29,7.99953], [1,32,29,6.00241], [0,32,30,7.95656], [1,32,30,6.07115],
    [0,32,31,7.94654], [1,32,31,5.91546], [0,32,32,7.91295], [1,32,32,5.99485], [0,64,1,7.61308], [1,64,1,6.45565],
    [0,64,2,7.63396], [1,64,2,5.51468], [0,64,3,7.67952], [1,64,3,5.56589], [0,64,4,7.68743], [1,64,4,5.32051],
    [0,64,5,7.74407], [1,64,5,5.59913], [0,64,6,7.77218], [1,64,6,5.6123], [0,64,7,7.88655], [1,64,7,5.888],
    [0,64,8,7.81488], [1,64,8,5.40649], [0,64,9,8.08254], [1,64,9,6.09311], [0,64,10,7.96517], [1,64,10,5.69938],
    [0,64,11,8.50957], [1,64,11,7.09288], [0,64,12,8.41576], [1,64,12,6.72101], [0,64,13,8.2875], [1,64,13,6.28431],
    [0,64,14,8.02242], [1,64,14,6.03933], [0,64,15,8.00595], [1,64,15,5.89121], [0,64,16,7.95507], [1,64,16,5.77375],
    [0,96,1,7.61944], [1,96,1,5.8424], [0,96,2,7.65463], [1,96,2,5.49062], [0,96,3,7.67146], [1,96,3,5.3191],
    [0,96,4,7.73657], [1,96,4,5.48863], [0,96,5,7.79673], [1,96,5,5.56053], [0,96,6,8.01184], [1,96,6,5.99625],
    [0,96,7,7.8868], [1,96,7,5.54399], [0,96,8,8.40621], [1,96,8,6.64033], [0,96,9,8.02187], [1,96,9,6.09102],
    [0,96,10,7.99681], [1,96,10,5.75236], [0,128,1,7.62809], [1,128,1,5.61888], [0,128,2,7.66431], [1,128,2,5.24389],
    [0,128,3,7.74354], [1,128,3,5.50971], [0,128,4,7.76525], [1,128,4,5.29687], [0,128,5,7.88297], [1,128,5,5.60243],
    [0,128,6,8.304], [1,128,6,6.55988], [0,128,7,7.99963], [1,128,7,5.92733], [0,128,8,7.9463], [1,128,8,5.59816],
    [0,160,1,7.64017], [1,160,1,5.70833], [0,160,2,7.69612], [1,160,2,5.40001], [0,160,3,7.77476], [1,160,3,5.47959],
    [0,160,4,7.83948], [1,160,4,5.55352], [0,160,5,8.13787], [1,160,5,6.38804], [0,160,6,7.92419], [1,160,6,5.71017],
    [0,192,1,7.66085], [1,192,1,5.66975], [0,192,2,7.73115], [1,192,2,5.41473], [0,192,3,7.94821], [1,192,3,5.9082],
    [0,192,4,8.15777], [1,192,4,6.51181], [0,192,5,7.95348], [1,192,5,5.61487], [0,224,1,7.64648], [1,224,1,5.52269],
    [0,224,2,7.79559], [1,224,2,5.65071], [0,224,3,7.81668], [1,224,3,5.3765], [0,224,4,7.91764], [1,224,4,5.94423],
    [0,256,1,7.66604], [1,256,1,5.46977], [0,256,2,7.75733], [1,256,2,5.2599], [0,256,3,8.10654], [1,256,3,6.32262],
    [0,256,4,7.91828], [1,256,4,5.35113], [0,288,1,7.66218], [1,288,1,5.4919], [0,288,2,7.92701], [1,288,2,5.86475],
    [0,288,3,7.97402], [1,288,3,5.89662], [0,320,1,7.70374], [1,320,1,5.59561], [0,320,2,7.8667], [1,320,2,5.51196],
    [0,320,3,7.928], [1,320,3,5.4217], [0,352,1,7.77487], [1,352,1,5.90631], [0,352,2,8.10877], [1,352,2,6.54729],
    [0,384,1,7.73229], [1,384,1,5.63131], [0,384,2,8.05227], [1,384,2,6.1685], [0,416,1,7.87472], [1,416,1,6.17347],
    [0,416,2,8.01463], [1,416,2,5.9123], [0,448,1,7.81043], [1,448,1,5.85592], [0,448,2,7.9037], [1,448,2,5.66241],
    [0,480,1,7.74864], [1,480,1,5.64191], [0,480,2,7.85043], [1,480,2,5.48258], [0,512,1,7.74012], [1,512,1,5.50847],
    [0,512,2,7.87153], [1,512,2,5.23011], [0,544,1,7.97916], [1,544,1,6.27956], [0,576,1,7.92972], [1,576,1,6.06129],
    [0,608,1,7.93536], [1,608,1,6.01398], [0,640,1,7.86981], [1,640,1,5.82657], [0,672,1,7.82432], [1,672,1,5.63798],
    [0,704,1,8.13384], [1,704,1,6.82601], [0,736,1,8.06096], [1,736,1,6.55986], [0,768,1,8.06532], [1,768,1,6.55274],
    [0,800,1,7.9756], [1,800,1,6.36592], [0,832,1,8.01215], [1,832,1,6.30058], [0,864,1,7.95541], [1,864,1,6.28115],
    [0,896,1,7.91675], [1,896,1,6.05328], [0,928,1,7.84401], [1,928,1,5.99128], [0,960,1,7.91239], [1,960,1,5.98083],
    [0,992,1,7.99538], [1,992,1,5.97172], [0,1024,1,7.84245], [1,1024,1,5.75355]
]

# 图1：block_size_x=64 时，耗时与 block_size_y 的关系
block_size_x_64 = [row for row in data if row[1] == 64]
block_size_y_64 = sorted(list(set(row[2] for row in block_size_x_64)))
time_no_shared_64 = [row[3] for row in block_size_x_64 if row[0] == 0]
time_with_shared_64 = [row[3] for row in block_size_x_64 if row[0] == 1]

plt.figure(figsize=(10, 6))
plt.plot(block_size_y_64, time_no_shared_64, label='No Shared Memory', color='blue', marker='o')
plt.plot(block_size_y_64, time_with_shared_64, label='With Shared Memory', color='red', marker='o')
plt.xlabel('block_size_y')
plt.ylabel('Time (s)')
plt.title('Time vs block_size_y (block_size_x = 64)')
plt.legend()
plt.grid(True)
plt.savefig('time_vs_block_size_y_block_size_x_64.png')
plt.close()

# 图2：block_size_y=3 时，耗时与 block_size_x 的关系
block_size_y_3 = [row for row in data if row[2] == 3]
block_size_x_3 = sorted(list(set(row[1] for row in block_size_y_3)))
time_no_shared_3 = [row[3] for row in block_size_y_3 if row[0] == 0]
time_with_shared_3 = [row[3] for row in block_size_y_3 if row[0] == 1]

plt.figure(figsize=(10, 6))
plt.plot(block_size_x_3, time_no_shared_3, label='No Shared Memory', color='blue', marker='o')
plt.plot(block_size_x_3, time_with_shared_3, label='With Shared Memory', color='red', marker='o')
plt.xlabel('block_size_x')
plt.ylabel('Time (s)')
plt.title('Time vs block_size_x (block_size_y = 3)')
plt.legend()
plt.grid(True)
plt.savefig('time_vs_block_size_x_block_size_y_3.png')
plt.close()

print("图像已生成并保存为 'time_vs_block_size_y_block_size_x_64.png' 和 'time_vs_block_size_x_block_size_y_3.png'")